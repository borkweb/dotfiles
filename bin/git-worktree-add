#!/usr/bin/env bash
# git-worktree-add - Add a git worktree and create the corresponding branch if needed
#
# Usage: git-worktree-add <branch-name>
#
# Creates a worktree in a sibling directory with pattern: ../repo-name-branch-name
# If the branch exists, it checks it out; otherwise, it creates a new branch.
# Outputs the worktree path on success.

set -e

if [ $# -eq 0 ]; then
    echo "Usage: git-worktree-add <branch-name>" >&2
    echo "Creates a git worktree in ../\${repo-name}-\${branch-name}" >&2
    exit 1
fi

# Check if we're in a git repository
if ! git rev-parse --git-dir > /dev/null 2>&1; then
    echo "Error: Not in a git repository" >&2
    exit 1
fi

branch_name="$1"
dir_name="$(basename "$(git rev-parse --show-toplevel)")"
worktree_name="${branch_name//\//-}"
worktree_path="../${dir_name}-${worktree_name}"

if git show-ref --verify --quiet "refs/heads/${branch_name}"; then
    # Branch exists - check it out without -b
    git worktree add "${worktree_path}" "${branch_name}" >&2
else
    # Branch doesn't exist - create it with -b
    git worktree add "${worktree_path}" -b "${branch_name}" >&2
fi

# Output the worktree path for the caller to cd to
echo "${worktree_path}"
